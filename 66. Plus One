Method 1:

class Solution:
    def plusOne(self, digits):
        """
        :type digits: List[int]
        :rtype: List[int]
        """
        num = 0
        for i in range(len(digits)):
            num += digits[i] * (pow(10, len(digits) - 1 - i))
        return [int(i) for i in str(num+1)]
        
Method 2:
class Solution:
    def plusOne(self, digits):
        """
        :type digits: List[int]
        :rtype: List[int]
        """
        if digits == []:
            return []
        tail = len(digits) - 1
        
        if digits[tail] < 9:
            digits[tail] += 1
            return digits
        if digits[tail] == 9 and len(digits) == 1:
            return [1, 0]

        for int in range(len(digits)-1,0,-1):
            if digits[int] != 9:
                break
            if digits[int] == 9 and digits[int-1] == 9:
                digits[int] = 0
            if digits[int] == 9 and digits[int-1] != 9:
                digits[int] = 0
                digits[int-1] += 1
                return digits
            if int == 1:
                if digits[int] == 0 and digits[int-1] == 9:
                    digits[0] = 1
                    digits.append(0)
                    return digits
