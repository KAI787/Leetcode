class Solution:
    def islandPerimeter(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        if not grid:
            return 0
        def sumOfPerimeter(i,j):
            adjancent = (i+1,j),(i,j+1),(i-1,j),(i,j-1)
            res = 0
            for x,y in adjancent:
                if x<0 or y<0 or x==len(grid) or y==len(grid[0]) or grid[x][y]==0:
                    res = res + 1
            return res
                    
        count = 0
        for j in range(len(grid[0])):   #range() is needed for "int" is not iteration
            for i in range(len(grid)):
                if grid[i][j] == 1:
                    count = count + sumOfPerimeter(i,j)
        return count
